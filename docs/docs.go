// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/ad": {
            "post": {
                "description": "Create new advertisement with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create new advertisement",
                "operationId": "create-ad",
                "parameters": [
                    {
                        "description": "Create ad",
                        "name": "ad",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Advertisement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Advertisement"
                        }
                    }
                }
            }
        },
        "/api/v1/ads": {
            "get": {
                "description": "Get a list of all advertisements",
                "produces": [
                    "application/json"
                ],
                "summary": "List all advertisements",
                "operationId": "get-ads",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Advertisement"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Advertisement": {
            "type": "object",
            "properties": {
                "conditions": {
                    "$ref": "#/definitions/models.Conditions"
                },
                "endAt": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.AgeRange": {
            "type": "object",
            "properties": {
                "ageEnd": {
                    "type": "integer"
                },
                "ageStart": {
                    "type": "integer"
                }
            }
        },
        "models.Conditions": {
            "type": "object",
            "properties": {
                "ageRange": {
                    "$ref": "#/definitions/models.AgeRange"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "genders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
