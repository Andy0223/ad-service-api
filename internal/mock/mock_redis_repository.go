// Code generated by MockGen. DO NOT EDIT.
// Source: internal/advertisement/repository/redis/redis_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAdCountRepository is a mock of AdCountRepository interface.
type MockAdCountRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAdCountRepositoryMockRecorder
}

// MockAdCountRepositoryMockRecorder is the mock recorder for MockAdCountRepository.
type MockAdCountRepositoryMockRecorder struct {
	mock *MockAdCountRepository
}

// NewMockAdCountRepository creates a new mock instance.
func NewMockAdCountRepository(ctrl *gomock.Controller) *MockAdCountRepository {
	mock := &MockAdCountRepository{ctrl: ctrl}
	mock.recorder = &MockAdCountRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdCountRepository) EXPECT() *MockAdCountRepositoryMockRecorder {
	return m.recorder
}

// GetByDate mocks base method.
func (m *MockAdCountRepository) GetByDate(ctx context.Context, key string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByDate", ctx, key)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByDate indicates an expected call of GetByDate.
func (mr *MockAdCountRepositoryMockRecorder) GetByDate(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByDate", reflect.TypeOf((*MockAdCountRepository)(nil).GetByDate), ctx, key)
}

// IncrByDate mocks base method.
func (m *MockAdCountRepository) IncrByDate(ctx context.Context, key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrByDate", ctx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrByDate indicates an expected call of IncrByDate.
func (mr *MockAdCountRepositoryMockRecorder) IncrByDate(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrByDate", reflect.TypeOf((*MockAdCountRepository)(nil).IncrByDate), ctx, key)
}
